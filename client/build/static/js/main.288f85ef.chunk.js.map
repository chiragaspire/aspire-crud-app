{"version":3,"sources":["components/layout/MainNavigation.module.css","components/Admin.module.css","components/layout/Layout.module.css","components/Homepage.module.css","components/UI/Card.module.css","components/Form.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/Admin.js","components/UI/Card.js","components/Homepage.js","components/Login.js","components/Notfound.js","components/Register.js","components/UpdateProfile.js","components/logout.js","components/EditEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MainNavigation","history","useHistory","token","localStorage","getItem","usertype","logoutHandler","a","fetch","method","headers","res","json","data","status","Error","error","alert","removeItem","push","className","classes","header","logo","src","nav","to","activeClassName","active","onClick","Layout","props","main","children","heading","id","label","sort","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","Admin","useState","setData","search","setSearch","setOrder","setOrderBy","loading","setLoading","React","rowsPerPage","page","setPage","user","console","log","sortDirection","loadUsers","body","EmployeeData","filter","edata","forEach","i","useEffect","handleClickDelete","email","searchData","name","toLowerCase","includes","pageLength","length","pagesize","parseInt","location","current","hash","replace","card","actions","classes1","control","type","placeholder","onKeyUp","e","target","value","class","row","property","handleRequestSort","slice","delete","event","newPage","href","Array","fill","p","Card","Homepage","setName","fetchData","typography","Login","setEmail","password","setPassword","submitHandler","preventDefault","JSON","stringify","setItem","onSubmit","htmlFor","required","onChange","minLength","Notfound","Register","cpassword","setCpassword","setUsertype","for","UpdateProfile","oldpassword","setOldpassword","then","catch","actions_delete","Logout","EditEmployee","initemail","useParams","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.288f85ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Admin_card__1aJw1\",\"actions\":\"Admin_actions__3N2Y-\",\"delete\":\"Admin_delete__1n796\",\"icon\":\"Admin_icon__1TNpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typography\":\"Homepage_typography__1gVpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2hemT\",\"loading\":\"Form_loading__1F3Th\",\"control\":\"Form_control__g5TiA\",\"actions\":\"Form_actions__3Xb7K\",\"actions_delete\":\"Form_actions_delete__UQ68K\",\"delete\":\"Form_delete__wXEOB\"};","import { useEffect, useState } from 'react';\nimport { NavLink ,Link, Redirect,useHistory} from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  var token = localStorage.getItem('token');\n  var usertype = localStorage.getItem('usertype');\n  const logoutHandler = async() => {\n\n    try {\n      const res = await fetch('/logout/me', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'Authorization':`Bearer ${token}`\n        }\n      })\n      const data = await res.json();\n      if (res.status===500) {\n        throw new Error(data.error);\n      }\n      alert('Logout successfully.')\n      localStorage.removeItem('token')\n      localStorage.removeItem('userEmail')\n      localStorage.removeItem('usertype')\n      token = null\n      \n      history.push('/login');\n    } catch(e) {   \n      alert(e);\n    }\n  }\n  const homeHandler = () => {\n    \n  }\n  \n    if (token == null) {\n      <Redirect to='/login' />\n    }\n \n  \n  return (\n    \n    <header className={classes.header}>\n      <div className={classes.logo}><img  src=\"/img/mainlogo.jpg\" /></div>\n      <nav className={classes.nav}>\n        <ul>\n          {token && usertype==='admin' && (<li>\n            \n            {/* <button onClick={logoutHandler} className={classes.button}> */}\n            <NavLink to='/admin' activeClassName={classes.active}>Adminpage\n            </NavLink>\n            {/* </button> */}\n            \n          </li>)}\n          {!token && (<li>\n            \n            {/* <button onClick={logoutHandler} className={classes.button}> */}\n              <NavLink  to='/login' activeClassName={classes.active}>Login\n              </NavLink>\n            {/* </button> */}\n            \n          </li>)}\n          {token && usertype==='admin' && (<li>\n            {/* <button onClick={logoutHandler} className={classes.button}> */}\n            <NavLink to='/register' activeClassName={classes.active}>\n              Register\n            </NavLink>\n            {/* </button> */}\n          </li>)}\n          {token && usertype==='employee' && (<li>\n            {/* <button onClick={homeHandler} className={classes.button}> */}\n              <NavLink to='/homepage' onClick={homeHandler} activeClassName={classes.active}> Home</NavLink> \n              {/* </button> */}\n          </li>)}\n          {token && usertype==='employee' && (<li>\n            {/* <button onClick={homeHandler} className={classes.button}> */}\n              <NavLink to='/updateprofile' activeClassName={classes.active}> Update Profile</NavLink> \n              {/* </button> */}\n          </li>)}\n          {token && (<li>\n            {/* <button onClick={logoutHandler} className={classes.button}> */}\n              <NavLink to='/login' onClick={logoutHandler} activeClassName={classes.active}> Logout</NavLink> \n              {/* </button> */}\n          </li>)}\n        </ul>\n      </nav>\n    </header>\n\n  );\n};\n\nexport default MainNavigation;","import React from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;","import Layout from './layout/Layout';\nimport React, { useState, useEffect } from 'react';\n\nimport { Redirect, useHistory } from 'react-router-dom';\nimport classes from './Admin.module.css';\nimport classes1 from './Form.module.css';\n\nconst heading = [\n  {id:\"id\",label:'id',sort:true},\n  { id: \"name\", label: 'name',sort:true },\n  {id:\"email\",label:'email',sort:true},\n  {id:\"edit\",label:'edit',sort:false},\n  {id:\"delete\",label:'delete',sort:false},\n]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n function Admin() {\n  const history=useHistory();\n  \n   const [data, setData] = useState([]);\n   const [search, setSearch] = useState('');\n   const [order, setOrder] = useState('asc');\n   const [orderBy,setOrderBy]=useState('id')\n   const [headers, setHeaders] = useState(heading);\n   const [loading, setLoading] = useState(false);\n   const [rowsPerPage, setRowsPerPage] = React.useState(3);\n   const [page, setPage] = React.useState(0);\n   let token = localStorage.getItem('token')\n   let user = localStorage.getItem('usertype')\n   console.log(user)\n   let sortDirection = order === 'asc' ? 'up' : 'down';\n \n    const loadUsers = async () => {\n      setLoading(true)\n      try {\n        const res = await fetch(\"/admingetdata\", {\n          method: 'GET',\n          headers: {\n            'content-type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const body = await res.json();\n        if (res.status === 400) {\n          throw new Error(body.error);\n        }\n    console.log(body)\n      const EmployeeData = body.filter(user => user.usertype !== 'admin');\n        let edata = EmployeeData.map(data => data);\n        edata.forEach((edata,i) => {\n          edata.id=i\n        })\n        console.log(edata)\n        setData(edata);\n          \n      }\n      catch (e) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userEmail');\n        localStorage.removeItem('usertype')\n          alert(e);\n          history.push('/login');\n      }\n      setLoading(false);\n  };  \n    useEffect(() => {\n      \n    loadUsers();\n  }, []);\n    \n   const handleAddUser = () => {\n     history.push('/register');\n  }\n  const handleClickEdit=(email)=>{\n      console.log(email)\n        history.push(`/editEmployee/${email}`);\n\n      \n  }\n  const handleClickDelete=async(email)=>{\n    console.log(email)\n    try{\n     const res=await fetch(`/deletebyadmin/${email}`,{\n       method:'DELETE'\n     })\n     const data=await res.json();\n     console.log(data)\n     if(res.status===400){\n       throw new Error(data.error);\n     }\n\n     alert(\"successfully\");\n     loadUsers();\n\n    }catch(e){\n       alert(e)\n     }\n  }\n  //  sorting table data by name or email\n   const searchData = (data) => {\n     const searchd = data.filter(data => {\n       return data.name.toLowerCase().includes(search.toLowerCase()) || data.email.toLowerCase().includes(search.toLowerCase())\n       \n     })\n   \n     return searchd\n   }\n   const handleSearch = (e) => {\n     setSearch(e.target.value);\n   }\n   \n\n  // sorting table by name\n  //  const handleSort = (orderby, ordered) => {\n    \n  //    const sortdata = data.map((data1, index) => [data1, index])\n  //    if (ordered === 1) {\n  //      sortdata.sort(((a, b) =>{\n  //        console.log(a[0][1])\n  //      return  a[0].name > b[0].name ? -1 : 1\n  //      }))\n  //    } else if (ordered === -1) {\n  //     sortdata.sort(((a, b) => a[0].name < b[0].name ? -1 : 1))\n  //    }\n\n  //   //  setOrder(1*-order)\n  //    const head = headers.map(data => data);\n  //    head.map(heading => {\n  //      if (heading.id === orderby) {\n  //        heading.order = -heading.order;\n  //      }\n  //    })\n  //    console.log(head);\n  //    console.log(sortdata)\n  //    setHeaders(head)\n  //    setData(sortdata.map(data => data[0]));\n  // }\n   \n  //  if (order === 1) {\n  //    console.log(\"accending\");\n  //  } else {\n  //   console.log(\"decending\");\n  //  }\n\n   const handleRequestSort = (property,sort) => {\n     if (!sort) {\n       return null;\n    }\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n   };\n   console.log(order, orderBy)\n   \n\n\n  //  Paging\n  let pageLength = searchData(data).length;\n  let pagesize = parseInt(pageLength / rowsPerPage);\n   console.log(history.location);\n   let current = 1;\n   if (history.location.hash) {\n    current = history.location.hash.replace('#', '');\n     current = parseInt(current)\n    \n   }\n    \n\n  const handleChangePrevPage = (event, newPage) => {\n    setPage(page - 1);\n    current--\n  };\n  const handleChangeNextPage = (event, newPage) => {\n    setPage(page + 1);\n    current=current+1\n  };\n   \n   const handleChangePage = (p) => {\n     \n     setPage(p)\n     current = p;\n  }\n    console.log(current)\n  \n   \n  // const handleChangeRowsPerPage = (event) => {\n  //   setRowsPerPage(parseInt(event.target.value, 10));\n  //   setPage(0);\n  // };\n  if (token === null || user !== 'admin') {\n    return <Redirect to=\"/login\" />\n}\n  return (\n <Layout >\n      \n        \n      <div className={classes.card}>\n        \n        \n      {loading && <p text-align=\"center\">loading...</p>}\n      <div className={classes.actions}>\n          <button  onClick={handleAddUser}>Add user</button>\n        </div>\n        <div className={classes1.control}>\n        <input type=\"text\" placeholder=\"Search...\" onKeyUp={ handleSearch}/>\n          </div>\n         \n        {!loading && data.length !== 0 && (\n           <>\n          <table id=\"example\" class=\"table  table-bordered\">\n            <thead >\n            <tr >\n              {headers.map((row,index) => (\n               \n                <th key={row.id} onClick={() => handleRequestSort(row.id,row.sort)}>{row.label}\n                  {orderBy === row.id && row.sort && (\n                      <i className={`fas fa-long-arrow-alt-${sortDirection}`}></i>  \n                  )}  \n                  </th>\n              ))}\n                </tr>\n              \n            </thead>\n            <tbody>\n                \n              {stableSort(searchData(data), getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => (\n                <tr key={row.id}>\n                  <td >\n                    {row.id}\n                  </td>\n                  <td >{row.name}</td>\n                  <td  >{row.email}</td>\n                  <td className={classes.actions}><button onClick={() => handleClickEdit(row.email)}>Edit</button></td>\n                  <td className={classes.actions}><button className={classes.delete} onClick={() => handleClickDelete(row.email)}>Delete</button></td>\n                          \n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <nav aria-label=\"Page navigation example\">\n            <ul class=\"pagination\">\n                \n                  \n                {page > 0 && (<li class=\"page-item \"  onClick={handleChangePrevPage}><a class=\"page-link\" href={`#${current-1}`}>Previous</a></li>\n                )}\n                {Array(pagesize + 1).fill(1).map((el, i) => \n            \n                  \n                    <li class=\"page-item \" id=\"pages\" onClick={() => handleChangePage(i)} key={i}><a class=\"page-link\" href={`#${i + 1}`}>{i + 1}</a></li>\n                  \n                ) }\n                \n              { page<pagesize && (<li class=\"page-item\" onClick={handleChangeNextPage}><a class=\"page-link\" href={`#${current+1}`}>Next</a></li>\n              )}\n              </ul>\n            </nav>\n           \n        </>\n        )}\n        \n            </div>\n\n\n      {/* <div className={classes.adduser}>\n          <button className={classes.edit_button} onClick={handleAddUser}>Add user</button>\n        </div>\n        {loading && <p text-align=\"center\">loading...</p>}\n      <TableContainer className={classes.container} component={Paper}>\n\n        \n        <Table stickyHeader aria-label=\"simple table\">\n          <TableHead className={classes.header}>\n            <StyledTableRow>\n              <StyledTableCell >Id</StyledTableCell>\n              <StyledTableCell >Name</StyledTableCell>\n              <StyledTableCell >Email</StyledTableCell>\n              <StyledTableCell >Edit</StyledTableCell>\n              <StyledTableCell>Delete</StyledTableCell>\n            </StyledTableRow>\n          </TableHead>\n          {!loading && data.length === 0 && (\n            <TableBody >\n              <p align='center' className={classes.message}>Employee not found</p>\n            </TableBody>\n          )}\n          {!loading && <TableBody>\n            {data.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row._id}\n                </StyledTableCell>\n                <StyledTableCell >{row.name}</StyledTableCell>\n                <StyledTableCell  >{row.email}</StyledTableCell>\n                <StyledTableCell  ><button className={classes.edit_button} onClick={() => handleClickEdit(row.email)}>Edit</button></StyledTableCell>\n                <StyledTableCell ><button className={classes.del_button} onClick={() => handleClickDelete(row.email)}>Delete</button></StyledTableCell>\n              \n              </StyledTableRow>\n            ))}\n          </TableBody>}\n        </Table>\n      </TableContainer> */}\n      \n        \n</Layout>\n  );\n }\n\nexport default Admin;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Redirect, Link, useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport classes from './Homepage.module.css';\nimport Card from './UI/Card.js';\nimport Layout from './layout/Layout';\nconst Homepage = () => {\n    const history = useHistory();\n    const [name, setName] = useState('');\n    \n    let token=localStorage.getItem('token')\n    let userEmail = localStorage.getItem('userEmail');\n    let user=localStorage.getItem('usertype')\n    const fetchData = async () => {\n        try{\n            const res = await fetch(`/getUsers/me`, {\n                method: 'GET',\n                headers: {\n                    'content-type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            \n        const data = await res.json();\n        console.log(data)\n        setName(data.name);\n            \n        }catch(e){\n            localStorage.removeItem('token');\n            localStorage.removeItem('userEmail');\n            alert(e);\n            history.push('/login');\n        }\n           \n    }\n    useEffect(() => {\n        fetchData();\n    },[])    \n    if (token === null || user !== 'employee') {\n        return <Redirect to=\"/login\" />\n    }\n    \n    return (\n        <Layout>\n            \n            <Card>\n                <div className={classes.typography}>\n                    <h1>Welcome { name}</h1>\n                </div>\n            </Card>\n           \n        </Layout>\n    );\n}\nexport default Homepage;","import React, { useState, useEffect } from 'react';\nimport { useHistory,Redirect } from 'react-router-dom'\nimport classes from './Form.module.css';\nimport Layout from './layout/Layout';\nimport Card from './UI/Card.js';\nconst Login = () => {\n    \n    \n    let token = localStorage.getItem('token')\n    let user=localStorage.getItem('usertype')\n    const history = useHistory();\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n    }\n    const passwordHandler = (e) => {\n        setPassword(e.target.value)\n    }\n    const handleReset = () => {\n        setEmail('');\n        setPassword('');\n    }\n    const submitHandler = async(e) => {\n        e.preventDefault();\n       \n        try {\n            const res =await fetch('/login', {\n                method: 'POST',\n                headers: {\n                    \"content-type\":\"application/json\"\n                },\n                body:JSON.stringify({email,password})\n            })\n            const data = await res.json();\n            \n            if (res.status === 400) {\n                throw new Error(data.error)\n            }\n            console.log(data)\n            token = localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"userEmail\", email);\n            if (data.usertype === \"admin\") {\n                localStorage.setItem('usertype','admin')\n                alert(\"Admin Login Successfully!!\")\n                history.push('/admin')\n            } else {\n                localStorage.setItem('usertype','employee')\n                alert(\"User Login Successfully!!\")\n                history.push('/homepage')\n            }\n            \n            handleReset()\n            \n        } catch (e)\n        {\n            alert(e)\n        }\n    }\n    \n    if (token && user==='employee') {\n        return <Redirect to=\"/homepage\" />\n    }\n    if (token && user==='admin') {\n        return <Redirect to=\"/admin\" />\n    }\n    \n    return (\n        <Layout >\n        <Card>\n        <form onSubmit={submitHandler}>\n            \n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n                    <input\n                        required\n                        type='email'\n                        id='email'\n                        value={email}\n                        onChange={emailHandler}\n                    />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n                    <input\n                        required\n                        type='password'\n                        id='password'\n                        value={password}\n                        onChange={passwordHandler}\n                        minLength=\"7\"\n                    />\n          </div>\n          \n          <div className={classes.actions}>\n            <button  className='btn'>Login</button>\n          </div>\n        </form>\n        </Card>\n        </Layout>\n   ) \n}\nexport default Login;","const Notfound = () => {\n    return (\n        <>\n            <h1>Page not found</h1>\n        </>\n    );\n}\nexport default Notfound;","import React, { useState, useEffect } from 'react';\nimport classes from './Form.module.css';\nimport Card from './UI/Card.js';\nimport {useHistory,Redirect} from 'react-router-dom' \nimport Layout from './layout/Layout';\nconst Register = () => {\n    const history = useHistory();\n    let token = localStorage.getItem('token')\n    let user=localStorage.getItem('usertype')\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [cpassword, setCpassword] = useState('');\n    const [usertype, setUsertype] = useState('employee');\n    const nameHandler = (e) => {\n        setName(e.target.value)\n    }\n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n    }\n    const passwordHandler = (e) => {\n        setPassword(e.target.value)\n    }\n    const cpasswordHandler = (e) => {\n        setCpassword(e.target.value)\n    }\n    const handleReset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n        setCpassword('');\n    }\n    const handleChangeEmployee = (e) => {\n        setUsertype('employee');\n    }\n    const handleChangeAdmin = (e) => {\n        setUsertype('admin');\n    }\n    const cancleHandler = () => {\n        history.push('/admin');\n    }\n    const submitHandler = async(e) => {\n        e.preventDefault();\n        if (password !== cpassword) {\n            return alert(\"Password must be same!!\")\n        }\n        \n        try {\n            const res =await fetch('/register', {\n                method: 'POST',\n                headers: {\n                    \"content-type\":\"application/json\"\n                },\n                body:JSON.stringify({name,email,password,usertype})\n            })\n            // if (!res.ok) {\n            //     throw new Error(\"Error\")\n            // }\n            const data = await res.json();\n            if (res.status === 400) {\n                throw new Error(data.error)\n            }\n            \n            alert(\"User Registation Successfully!!\")\n            handleReset()\n            \n            history.push('/login')\n        } catch (e)\n        {\n                alert(e)\n        }\n    }\n    if (token === null || user !== 'admin') {\n        return <Redirect to=\"/login\" />\n    }\n    return (\n        <Layout >\n        <Card>\n            <form onSubmit={submitHandler}>\n            <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input \n                type='text'\n                id='name'\n                value={name}\n                onChange={nameHandler}\n                required        \n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n                    <input\n                        required\n                        type='email'\n                        id='email'\n                        value={email}\n                        onChange={emailHandler}\n                    />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n                    <input\n                        required\n                        type='password'\n                        id='password'\n                        value={password}\n                        onChange={passwordHandler}\n                        minLength=\"7\"\n                    />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='cpassword'>Confirm Password</label>\n                    <input\n                        required\n                        type='password'\n                        id='cpassword'\n                        value={cpassword}\n                        onChange={cpasswordHandler}\n                        minLength='7'\n                    />\n          </div>\n          <div className={classes.control}>\n          <label for=\"users\">Type of user:</label>\n\n          <select name={usertype}  id=\"users\">\n            <option value=\"employee\" onClick={handleChangeEmployee}>Employee</option>\n            <option value=\"admin\" onClick={handleChangeAdmin}>Admin</option>\n            </select>\n\n          </div>\n          <div className={classes.actions}>\n            <button  >Register</button>  &nbsp; &nbsp;\n            <button type=\"button\" onClick={cancleHandler}  className={classes.delete}>Cancel</button>\n          </div>\n          \n        </form>\n        </Card>\n        </Layout>\n   ) \n}\nexport default Register;","import { Redirect, Link, useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport classes from './Form.module.css';\nimport Card from './UI/Card.js';\nimport Layout from './layout/Layout';\nconst UpdateProfile = () => {\n    const history = useHistory();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [oldpassword, setOldpassword] = useState('');\n    let token = localStorage.getItem('token');\n    let userEmail = localStorage.getItem('userEmail');\n    let user = localStorage.getItem('usertype');\n    const fetchData = async () => {\n        try {\n            const res = await fetch(`/getUsers/me`, {\n                method: 'GET',\n                headers: {\n                    'content-type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            const data = await res.json();\n            console.log(data)\n            if (res.status === 400) {\n                localStorage.removeItem('token');\n                localStorage.removeItem('userEmail')\n                throw new Error(data.error);\n            }\n            setName(data.name);\n            setEmail(data.email);\n            setPassword(data.password);\n            setOldpassword(data.password);\n        }\n    catch (e) {\n        alert(e)\n        history.push('/login');\n    }\n    }\n    useEffect(() => {\n\n        fetchData();\n    \n    },[])    \n   \n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let body;\n        if (password === oldpassword) {\n            body = JSON.stringify({ name, email })\n        }\n        else {\n            body=JSON.stringify({ name, email,password })\n        }\n        \n        const setData = async () => {\n            try {  \n                const res = await fetch(`/updateUser/me`, {\n                    method: 'PATCH',\n                    headers: {\n                        'content-type': 'application/json',\n                        'Authorization':`Bearer ${token}`\n                    },\n                    body\n                })\n            const data = await res.json();\n                console.log(data)\n                if (res.status === 400) {\n                    throw new Error(data.error)\n                }\n                localStorage.setItem('userEmail', email)\n                \n                alert(\"User updated successfully\")\n            } catch (e)\n            {\n                alert(e)\n            }\n        }\n        \n        setData().then(() => {\n            fetchData();\n            setPassword('')\n        }).catch(e => {\n            alert(e)\n        })\n    }\n    const handleDelete = (e) => {\n        e.preventDefault();\n        \n        const setData = async () => {\n            try {\n                const res = await fetch(`/deleteUser/me`, {\n                    method: 'DELETE',\n                    headers: {\n                        'content-type': 'application/json',\n                        'Authorization':`Bearer ${token}`\n                    }, \n                })\n            const data = await res.json();\n                console.log(data)\n                \n                if (res.status === 500) {\n                    throw new Error(\"failed to delete user!\")\n                }\n                localStorage.removeItem('userEmail')\n                localStorage.removeItem('token')\n                \n                alert(\"User deleted successfully\")\n                history.push('/login')\n            } catch (e)\n            {\n                alert(e)\n            }\n        }\n        \n        setData()\n    }\n    \n    const nameHandler = (e) => {\n        setName(e.target.value)\n    }\n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n    }\n    const passwordHandler = (e) => {\n        setPassword(e.target.value)\n    }\n   \n\n    if (token === null || user!=='employee') {\n        return <Redirect to=\"/login\" />\n    }\n    return (\n        <Layout>\n            \n        <Card>\n        <form >\n        <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input \n                type='text'\n                id='name'\n                value={name}\n                onChange={nameHandler}\n                required        \n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n                    <input\n                        required\n                        type='email'\n                        id='email'\n                        value={email}\n                        onChange={emailHandler}\n                    />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n                    <input\n                        required\n                        type='password'\n                        id='password'\n                        value={password}\n                        onChange={passwordHandler}\n                        minLength=\"7\"\n                    />\n          </div>\n          <div>\n          <div className={classes.actions}>\n            <button onClick={handleUpdate} >Update Details</button>&nbsp;&nbsp;\n            <button onClick={handleDelete} className={classes.delete} >Delate Account</button>\n          </div>\n          \n          <div className={classes.actions_delete  }>\n            \n          </div>\n          </div>\n        </form>\n      </Card>\n           \n        </Layout>\n    );\n}\nexport default UpdateProfile;","import { Redirect } from 'react-router-dom';\nconst Logout = () => {\n    localStorage.removeItem('token');\n    return <h1>logout</h1>\n}\n\nexport default Logout;","import React, { useState, useEffect } from 'react';\nimport classes from './Form.module.css';\nimport Card from './UI/Card.js';\nimport {useHistory, useParams,Redirect} from 'react-router-dom' \nimport Layout from './layout/Layout';\nconst EditEmployee = (props) => {\n    const history = useHistory();\n    let token = localStorage.getItem('token')\n    let user=localStorage.getItem('usertype')\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [oldpassword, setOldpassword] = useState('');\n    \n    const initemail=useParams();\n    console.log(initemail.email);\n\n    const loadUsers = async () => {\n        try {\n            const res = await fetch(`/getdata/${initemail.email}`, {\n                method: 'GET',\n                headers: {\n                  'content-type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n                }\n          });\n          const body=await res.json();\n            if (res.status === 400) {\n                localStorage.removeItem('token')\n                localStorage.removeItem('userEmail')\n                localStorage.removeItem('usertype')\n                throw new Error(body.error);\n          }\n            console.log(body)\n          \n                setName(body.name);\n                setEmail(body.email);\n                setPassword(body.password);\n                setOldpassword(body.password)\n        } catch (e) {\n            alert(e)\n        }\n        \n    };  \n    useEffect(() => {\n\n        loadUsers();\n      }, []);\n    const nameHandler = (e) => {\n        setName(e.target.value)\n    }\n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n    }\n    const passwordHandler = (e) => {\n        setPassword(e.target.value)\n    }\n    \n    const handleReset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n        \n    }\n    const submitHandler = async(e) => {\n        e.preventDefault();\n        let body;\n        if (password === oldpassword) {\n            body = JSON.stringify({ name, email })\n        }\n        else {\n            body=JSON.stringify({ name, email,password })\n        }\n        try {\n            const res =await fetch(`/updateEmployee/${initemail.email}`, {\n                method: 'PATCH',\n                headers: {\n                    \"content-type\":\"application/json\"\n                },\n                body\n            })\n            // if (!res.ok) {\n            //     throw new Error(\"Error\")\n            // }\n            const data = await res.json();\n            if (res.status === 400) {\n                throw new Error(data.error)\n            }\n            \n            alert(\"User Update Successfully!!\")\n            handleReset()\n            \n            history.push('/admin')\n        } catch (e)\n        {\n                alert(e)\n        }\n    }\n    const handleClickCancle = ()=>{\n        history.push('/admin');\n    }\n\n    if (token === null || user !== 'admin') {\n        return <Redirect to=\"/login\" />\n    }\n    return (\n        <Layout >\n        <Card>\n            <form onSubmit={submitHandler}>\n            <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input \n                type='text'\n                id='name'\n                value={name}\n                onChange={nameHandler}\n                required        \n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n                    <input\n                        required\n                        type='email'\n                        id='email'\n                        value={email}\n                        onChange={emailHandler}\n                    />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n                    <input\n                        required\n                        type='password'\n                        id='password'\n                        value={password}\n                        onChange={passwordHandler}\n                        minLength=\"7\"\n                    />\n          </div>\n          \n          <div className={classes.actions}>\n                <button className='btn'>Update</button> &nbsp;\n                <button type=\"button\" onClick={handleClickCancle} className='btn'>Cancel</button>\n          </div>\n          \n        </form>\n        </Card>\n        </Layout>\n   ) \n}\nexport default EditEmployee;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport Admin from './components/Admin';\nimport Homepage from './components/Homepage';\nimport Login from './components/Login';\nimport Notfound from './components/Notfound';\nimport Register from './components/Register';\nimport UpdateProfile from './components/UpdateProfile';\nimport Logout from './components/logout';\nimport EditEmployee from './components/EditEmployee';\nimport Navbar from './components/layout/Navbar';\nfunction App() {\n  // const [data, setData] = useState('');\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const res = await fetch('http://localhost:5000/testing');\n  //     const data = await res.json();\n  //     setData(data.body);\n  //   }\n  //   fetchData()\n  // }, []);\n\n  return (\n    <>\n      \n      {/* <Router>\n      <Navbar />\n        <Switch >\n            <Route path=\"/login\" component={Login} />\n        </Switch>\n        </Router> */}\n      <Router>\n        \n        <Switch >\n        <Route path='/' exact>\n          <Redirect to='/login' />\n        </Route>\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/editEmployee/:email\" component={EditEmployee} />\n          <Route path=\"/login\" component={Login} />\n          <Route  path=\"/register\" component={ Register}/>\n          <Route path=\"/homepage\" component={Homepage} />\n          <Route path=\"/updateprofile\" component={UpdateProfile} />\n            <Route path=\"/logout\" component={ Logout}/>\n          <Route path='*'>\n            <Notfound />\n            </Route>\n          </Switch>\n          \n      </Router>\n      \n      {/* <h1>Message: {data}</h1> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}